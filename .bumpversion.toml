[tool.bumpversion]
current_version = "1.1.4"
parse = '(?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)(?:(?P<release>rc)(?P<serial>\d+))?'
serialize = [
    "{major}.{minor}.{patch}{release}{serial}",
    "{major}.{minor}.{patch}",
]
message = "Bump version: {current_version} -> {new_version}"
tag_name = "{new_version}"

[tool.bumpversion.parts.release]
first_value = "rc"
optional_value = "final"
values = [
    "rc",
    "final",
]

[tool.bumpversion.parts.serial]
first_value = 1

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = 'fallback-version = "{current_version}"'
replace = 'fallback-version = "{new_version}"'

[[tool.bumpversion.files]]
glob = "src/**/*.py"
glob_exclude = ["src/easynetwork/version.py"]
search = 'NEXT_VERSION|{current_major}.{current_minor}.{current_patch}rc\d+'
replace = '{new_version}'
regex = true
serialize = [
    "{major}.{minor}.{patch}{release}{serial}",
    "{major}.{minor}.{patch}",
    "{major}.{minor}",
]
ignore_missing_version = true

[[tool.bumpversion.files]]
glob = "docs/source/**/*.rst"
search = 'NEXT_VERSION|{current_major}.{current_minor}.{current_patch}rc\d+'
replace = '{new_version}'
regex = true
serialize = [
    "{major}.{minor}.{patch}{release}{serial}",
    "{major}.{minor}.{patch}",
    "{major}.{minor}",
]
ignore_missing_version = true

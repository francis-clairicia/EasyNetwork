[tox]
minversion = 4.0
envlist = build, py310-{__standard__,cbor,encryption,sniffio}, coverage, mypy-{full,test}, pre-commit
skip_missing_interpreters = true

[base]
setenv =
    PYTHONHASHSEED = 100
    PYTHONUNBUFFERED = 1
    PDM_IGNORE_SAVED_PYTHON=1
all_extras =
    cbor
    encryption
    sniffio

[testenv:py310-{__standard__,cbor,encryption,sniffio}]
package = wheel
extras =
    cbor: cbor
    encryption: encryption
    sniffio: sniffio
deps =
    pdm
setenv =
    {[base]setenv}
    COVERAGE_FILE=.coverage.{envname}
    __standard__: PYTEST_ADDOPTS=-m "not feature"
    cbor: PYTEST_ADDOPTS=-m "feature_cbor"
    encryption: PYTEST_ADDOPTS=-m "feature_encryption"
    sniffio: PYTEST_ADDOPTS=-m "feature_sniffio"
commands_pre =
    pdm sync --no-self --dev --group=test
commands =
    pytest -p 'no:cacheprovider' {tty:--color=yes} {posargs:--cov --cov-report=''}

[testenv:coverage]
skip_install = True
depends = py310-{__standard__,cbor,encryption,sniffio}
parallel_show_output = True
deps =
    coverage[toml]
allowlist_externals =
    rm
setenv =
    {[base]setenv}
    COVERAGE_FILE=.coverage
commands_pre =
    rm -rf {env:COVERAGE_FILE}
commands =
    coverage combine
    coverage report

[testenv:build]
skip_install = true
deps =
    build
    twine
allowlist_externals =
    cp
    rm
setenv =
    {[base]setenv}
passenv =
    SOURCE_DATE_EPOCH
commands =
    python -m build --outdir {envtmpdir}{/}dist
    twine check --strict {envtmpdir}{/}dist{/}*
    cp -a {envtmpdir}{/}dist{/}. {toxinidir}{/}dist
    rm -rf {envtmpdir}{/}dist

[testenv:mypy-{full,test}]
package = wheel
extras =
    {[base]all_extras}
deps =
    pdm
allowlist_externals =
    rm
setenv =
    {[base]setenv}
    MYPY_CACHE_DIR = {envdir}{/}.mypy_cache
    MYPY_OPTS = --no-incremental --config-file {toxinidir}{/}pyproject.toml
commands_pre =
    pdm sync --no-self --dev --group=mypy
    test: pdm sync --no-self --dev --group=test
commands =
    full: mypy {env:MYPY_OPTS} -p easynetwork -p easynetwork_asyncio
    test: mypy {env:MYPY_OPTS} {toxinidir}{/}tests
commands_post =
    rm -rf {env:MYPY_CACHE_DIR}

[testenv:pre-commit]
skip_install = true
deps =
    pre-commit
setenv =
    {[base]setenv}
    SKIP=mypy
passenv =
    PRE_COMMIT_HOME
    XDG_CACHE_HOME
commands =
    pre-commit run {posargs:--all-files}

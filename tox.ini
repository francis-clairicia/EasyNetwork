[tox]
minversion = 4.0
envlist = build, py311-{__standard__,asyncio-proactor,cbor,encryption,sniffio,uvloop}, coverage, mypy-{full,test}, pre-commit
skip_missing_interpreters = true

[base]
setenv =
    PYTHONHASHSEED = 100
    PYTHONUNBUFFERED = 1
    PDM_IGNORE_SAVED_PYTHON=1
all_extras =
    cbor
    encryption
    sniffio
    ; uvloop is expressly not added
pdm-deps =
    pdm >= 2.5

[testenv:py311-{__standard__,asyncio-proactor,cbor,encryption,sniffio,uvloop}]
package = wheel
platform =
    asyncio-proactor: win32
    uvloop: linux|darwin
extras =
    cbor: cbor
    encryption: encryption
    sniffio: sniffio
    uvloop: uvloop
deps =
    {[base]pdm-deps}
setenv =
    {[base]setenv}
    COVERAGE_FILE=.coverage.{envname}
    PYTEST_ADDOPTS=-p "no:cacheprovider" {tty:--color=yes} {posargs:--cov --cov-report=''}
commands_pre =
    pdm sync --no-self --dev --group=test
commands =
    __standard__: pytest -m "not feature"
    asyncio-proactor: pytest -vvs --asyncio-event-loop="asyncio-proactor" -m "functional and asyncio and not feature"
    cbor: pytest -m "feature_cbor"
    encryption: pytest -m "feature_encryption"
    sniffio: pytest -m "feature_sniffio"
    uvloop: pytest --asyncio-event-loop="uvloop" -m "functional and asyncio and not feature"

[testenv:coverage]
skip_install = True
depends = py311-{__standard__,asyncio-proactor,cbor,encryption,sniffio,uvloop}
parallel_show_output = True
deps =
    coverage
allowlist_externals =
    rm
setenv =
    {[base]setenv}
    COVERAGE_FILE=.coverage
commands_pre =
    rm -rf {env:COVERAGE_FILE}
commands =
    coverage combine
    coverage report

[testenv:build]
skip_install = true
deps =
    build
    twine
allowlist_externals =
    cp
    rm
setenv =
    {[base]setenv}
passenv =
    SOURCE_DATE_EPOCH
commands =
    python -m build --outdir {envtmpdir}{/}dist
    twine check --strict {envtmpdir}{/}dist{/}*
    cp -a {envtmpdir}{/}dist{/}. {toxinidir}{/}dist
    rm -rf {envtmpdir}{/}dist

[testenv:mypy-{full,test}]
package = wheel
extras =
    {[base]all_extras}
deps =
    {[base]pdm-deps}
allowlist_externals =
    rm
setenv =
    {[base]setenv}
    MYPY_CACHE_DIR = {envdir}{/}.mypy_cache
    MYPY_OPTS = --no-incremental --config-file {toxinidir}{/}pyproject.toml
commands_pre =
    pdm sync --no-self --dev --group=mypy
    test: pdm sync --no-self --dev --group=test
commands =
    full: mypy {env:MYPY_OPTS} -p easynetwork -p easynetwork_asyncio
    test: mypy {env:MYPY_OPTS} {toxinidir}{/}tests
commands_post =
    rm -rf {env:MYPY_CACHE_DIR}

[testenv:pre-commit]
skip_install = true
deps =
    pre-commit
setenv =
    {[base]setenv}
    SKIP=mypy
passenv =
    PRE_COMMIT_HOME
    XDG_CACHE_HOME
commands =
    pre-commit run {posargs:--all-files}
